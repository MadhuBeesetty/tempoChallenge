{"ast":null,"code":"var _jsxFileName = \"/Users/madhusudhan/Desktop/frontend-evaluation-starter-app/src/components/Player.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport ReactPlayer from \"react-player\";\n\nfunction Player() {\n  const renderNotes = data => {\n    return data.forEach(e => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 47\n        }\n      }, e.note);\n    });\n  };\n\n  let tempoData = {\n    name: '',\n    videoUrl: '',\n    notes: []\n  };\n  const [classroomValue, setClassroomValue] = useState(tempoData);\n  useEffect(() => {\n    fetch(\"http://take-home-assignment.tempo.fit/video.json\").then(res => res.json()).then(result => setClassroomValue({\n      name: result.name,\n      videoUrl: result.videoUrl,\n      notes: []\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-auto\",\n    style: {\n      \"width\": \"800px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, classroomValue.name), /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: classroomValue.videoUrl,\n    controls: true,\n    width: \"100%\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, renderNotes(classroomValue.notes)));\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/madhusudhan/Desktop/frontend-evaluation-starter-app/src/components/Player.tsx"],"names":["React","useEffect","useState","ReactPlayer","Player","renderNotes","data","forEach","e","note","tempoData","name","videoUrl","notes","classroomValue","setClassroomValue","fetch","then","res","json","result"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAGA,SAASC,MAAT,GAAkB;AAEhB,QAAMC,WAAW,GAAIC,IAAD,IAAe;AACjC,WAAOA,IAAI,CAACC,OAAL,CAAcC,CAAD,IAAY;AAAE,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,CAAC,CAACC,IAAP,CAAR;AAA4B,KAAvD,CAAP;AACD,GAFD;;AAIA,MAAIC,SAAS,GAAG;AACdC,IAAAA,IAAI,EAAE,EADQ;AAEdC,IAAAA,QAAQ,EAAE,EAFI;AAGdC,IAAAA,KAAK,EAAE;AAHO,GAAhB;AAMA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAACQ,SAAD,CAApD;AACAT,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK,CAAC,kDAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,MAAM,IAAIL,iBAAiB,CAAC;AAAEJ,MAAAA,IAAI,EAAES,MAAM,CAACT,IAAf;AAAqBC,MAAAA,QAAQ,EAAEQ,MAAM,CAACR,QAAtC;AAAgDC,MAAAA,KAAK,EAAE;AAAvD,KAAD,CAFnC;AAGD,GAJQ,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAAE,eAAS;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,cAAc,CAACH,IAAnB,CADF,eAEE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEG,cAAc,CAACF,QAAjC;AAA2C,IAAA,QAAQ,MAAnD;AAAoD,IAAA,KAAK,EAAC,MAA1D;AAAiE,IAAA,MAAM,EAAC,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,WAAW,CAACS,cAAc,CAACD,KAAhB,CADd,CAHF,CADF;AASD;;AAED,eAAeT,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactPlayer from \"react-player\"\nimport { isFlowPredicate } from '../../node_modules/@babel/types';\n\nfunction Player() {\n\n  const renderNotes = (data: any) => {\n    return data.forEach((e: any) => { return (<li>{e.note}</li>) })\n  }\n\n  let tempoData = {\n    name: '',\n    videoUrl: '',\n    notes: []\n  }\n\n  const [classroomValue, setClassroomValue] = useState(tempoData);\n  useEffect(() => {\n    fetch(\"http://take-home-assignment.tempo.fit/video.json\")\n      .then(res => res.json())\n      .then(result => setClassroomValue({ name: result.name, videoUrl: result.videoUrl, notes: [] }))\n  })\n\n  return (\n    <div className=\"mx-auto\" style={{ \"width\": \"800px\" }}>\n      <p>{classroomValue.name}</p>\n      <ReactPlayer url={classroomValue.videoUrl} controls width='100%' height='100%' />\n      <ul>\n        {renderNotes(classroomValue.notes)}\n      </ul>\n    </div>\n  )\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}